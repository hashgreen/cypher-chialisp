(
  (defmacro @cypher.tests.assert-fails (statement)
    ;; Expect the statement to fail.

    (qq (if
      (= (f (mod () (unquote statement))) (q . x))
      1
      (x (q . (unquote statement)) "should fail!")
    ))
  )

  (defmacro @cypher.tests.assert-equal (statement result)
    ;; Expect the statement to evaluate to result.

    (qq (if
      (= (unquote statement) (unquote result))
      1
      (x (q . (unquote statement)) "does not evaluate to" (q . (unquote result)))
    ))
  )

  (defmacro @cypher.tests.assert args
    ;; Assert a series of statements, followed by test name.
    ;
    ; Usage: (assert cond1 cond2 ... name)

    (if (r args)
      (qq (if (unquote (f args))
        (unquote (c @cypher.tests.assert (r args)))
        (x (q . (unquote (f args))) "evalutes to false.")
      ))
      (qq (concat (unquote (f args)) " passed"))
    )
  )

  (defmacro @assert-fails args (c @cypher.tests.assert-fails args))
  (defmacro @assert-equal args (c @cypher.tests.assert-equal args))
  (defmacro @assert args (c @cypher.tests.assert args))
)
