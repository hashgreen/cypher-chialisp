(a (mod ()

  (include cypher/fracmath.clsp)
  (include cypher/itertools.clsp)
  (include cypher/math.clsp)
  (include cypher/utils.clsp)

  (include tests/utils.clsp)

  (defun-inline test-abs ()
    (@assert
      (@assert-equal (@cf.math.abs -10) 10)
      (@assert-equal (@cf.math.abs 123) 123)
      "test-math.test-abs"))

  (defun-inline test-round ()
    (@assert
      (@assert-equal (@cf.math.round-up-to-odd 0) 1)
      (@assert-equal (@cf.math.round-up-to-odd 1) 1)
      (@assert-equal (@cf.math.round-up-to-odd 2) 3)
      (@assert-equal (@cf.math.round-up-to-odd 3) 3)
      (@assert-equal (@cf.math.round-up-to-even 0) 0)
      (@assert-equal (@cf.math.round-up-to-even 1) 2)
      (@assert-equal (@cf.math.round-up-to-even 2) 2)
      (@assert-equal (@cf.math.round-up-to-even 3) 4)
      (@assert-equal (@cf.math.round-down-to-odd 0) -1)
      (@assert-equal (@cf.math.round-down-to-odd 1) 1)
      (@assert-equal (@cf.math.round-down-to-odd 2) 1)
      (@assert-equal (@cf.math.round-down-to-odd 3) 3)
      (@assert-equal (@cf.math.round-down-to-even 0) 0)
      (@assert-equal (@cf.math.round-down-to-even 1) 0)
      (@assert-equal (@cf.math.round-down-to-even 2) 2)
      (@assert-equal (@cf.math.round-down-to-even 3) 2)
      "test-math.test-round"))

  (defun-inline test-sqrt ()
    (@assert
      (@assert-equal (@cf.math.sqrt 0) 0)
      (@assert-equal (@cf.math.sqrt 1) 1)
      (@assert-equal (@cf.math.sqrt 2) 1)
      (@assert-equal (@cf.math.sqrt 3) 1)
      (@assert-equal (@cf.math.sqrt 4) 2)
      (@assert-equal (@cf.math.sqrt 8) 2)
      (@assert-equal (@cf.math.sqrt 100) 10)
      (@assert-equal (@cf.math.sqrt 420) 20)
      (@assert-equal (@cf.math.sqrt 10000) 100)
      (@assert-equal (@cf.math.sqrt 1000000000000) 1000000)
      ; (@assert-fail (@cf.math.sqrt -1))
      "test-math.test-sqrt"))

  (defun-inline test-str ()
    (@assert
      (@assert-equal (@cf.math.str 0 -1) "0")
      (@assert-equal (@cf.math.str 0 0) "0.")
      (@assert-equal (@cf.math.str 0 1) "0.0")
      (@assert-equal (@cf.math.str 1 -1) "1")
      (@assert-equal (@cf.math.str 1 0) "1.")
      (@assert-equal (@cf.math.str 1 1) "0.1")
      (@assert-equal (@cf.math.str 11 -1) "11")
      (@assert-equal (@cf.math.str 11 0) "11.")
      (@assert-equal (@cf.math.str 11 1) "1.1")
      (@assert-equal (@cf.math.str 1234567 3) "1234.567")
      "test-math.test-str"))

  (defun-inline test-gt ()
    (@assert
      (@assert-equal (@cf.math.gt 1 0) 1)
      (@assert-equal (@cf.math.gt 0 1) 0)
      (@assert-equal (@cf.math.gt 1 1) 0)
      "test-math.test-gt"))

  (defun-inline test-ge ()
    (@assert
      (@assert-equal (@cf.math.ge 1 0) 1)
      (@assert-equal (@cf.math.ge 0 1) 0)
      (@assert-equal (@cf.math.ge 1 1) 1)
      "test-math.test-ge"))

  (defun-inline test-lt ()
    (@assert
      (@assert-equal (@cf.math.lt 1 0) 0)
      (@assert-equal (@cf.math.lt 0 1) 1)
      (@assert-equal (@cf.math.lt 1 1) 0)
      "test-math.test-lt"))

  (defun-inline test-le ()
    (@assert
      (@assert-equal (@cf.math.le 1 0) 0)
      (@assert-equal (@cf.math.le 0 1) 1)
      (@assert-equal (@cf.math.le 1 1) 1)
      "test-math.test-le"))

  (defun-inline test-eq ()
    (@assert
      (@assert-equal (@cf.math.eq 1 0) 0)
      (@assert-equal (@cf.math.eq 0 1) 0)
      (@assert-equal (@cf.math.eq 1 1) 1)
      "test-math.test-eq"))

  (defun-inline test-ne ()
    (@assert
      (@assert-equal (@cf.math.ne 1 0) 1)
      (@assert-equal (@cf.math.ne 0 1) 1)
      (@assert-equal (@cf.math.ne 1 1) 0)
      "test-math.test-ne"))

  (defun-inline test-add ()
    (@assert
      (@assert-equal (@cf.math.add 1 2) 3)
      (@assert-equal (@cf.math.add 1 -2) -1)
      (@assert-equal (@cf.math.add -1 2) 1)
      (@assert-equal (@cf.math.add -1 -2) -3)
      "test-math.test-add"))

  (defun-inline test-sub ()
    (@assert
      (@assert-equal (@cf.math.sub 1 2) -1)
      (@assert-equal (@cf.math.sub 1 -2) 3)
      (@assert-equal (@cf.math.sub -1 2) -3)
      (@assert-equal (@cf.math.sub -1 -2) 1)
      "test-math.test-sub"))

  (defun-inline test-unsigned-sub ()
    (@assert
      (@assert-equal (@cf.math.unsigned-sub 2 2) 0)
      (@assert-fail (@cf.math.unsigned-sub 1 2))
      "test-math.test-unsigned-sub"))

  (defun-inline test-div ()
    (@assert
      (@assert-equal (@cf.math.div 2 2) 1)
      (@assert-equal (@cf.math.div 2 3) 0)
      (@assert-equal (@cf.math.div -3 2) -2)
      (@assert-equal (@cf.math.div 3 2) 1)
      "test-math.test-div"))

  (defun-inline test-pow ()
    (@assert
      (@assert-equal (@cf.math.pow 1 10) 1)
      (@assert-equal (@cf.math.pow 2 0) 1)
      (@assert-equal (@cf.math.pow 2 10) 1024)
      (@assert-equal (@cf.math.pow -3 3) -27)
      "test-math.test-pow"))

  (defun-inline test-mul-frac ()
    (@assert
      (@assert-equal (@cf.math.mul-frac 2 (@cf.Frac 300 100)) 6)
      (@assert-equal (@cf.math.mul-frac 123 (@cf.Frac 457 100)) 562)
      "test-math.test-mul-frac"))

  (defun-inline test-min ()
    (@assert
      (@assert-equal (@cf.math.min 1 2 3 4 5) 1)
      (@assert-equal (cf.math.min (list 1 2 3 4 5)) 1)
      "test-math.test-min"))

  (defun-inline test-max ()
    (@assert
      (@assert-equal (@cf.math.max 1 2 3 4 5) 5)
      (@assert-equal (cf.math.max (list 1 2 3 4 5)) 5)
      "test-math.test-max"))

  (defun-inline test-sum ()
    (@assert
      (@assert-equal (@cf.math.sum) 0)
      (@assert-equal (@cf.math.sum 1 2 3 4 5) 15)
      (@assert-equal (cf.math.sum (list)) 0)
      (@assert-equal (cf.math.sum (list 1 2 3 4 5)) 15)
      "test-math.test-sum"))

  (defun-inline test-prod ()
    (@assert
      (@assert-equal (@cf.math.prod) 1)
      (@assert-equal (@cf.math.prod 1 2 3 4 5) 120)
      (@assert-equal (cf.math.prod (list)) 1)
      (@assert-equal (cf.math.prod (list 1 2 3 4 5)) 120)
      "test-math.test-prod"))

  (defun-inline test-math ()
    (@assert
      (test-abs)
      (test-round)
      (test-sqrt)
      (test-str)
      (test-gt)
      (test-ge)
      (test-lt)
      (test-le)
      (test-eq)
      (test-ne)
      (test-add)
      (test-sub)
      (test-unsigned-sub)
      (test-div)
      (test-pow)
      (test-mul-frac)
      (test-min)
      (test-max)
      (test-sum)
      (test-prod)
      "test-math"))

  (test-math)

) ())
