(a (mod ()

  (include cypher/macros.clvm)
  (include cypher/math.clvm)
  (include tests/utils.clvm)

  (defun test-unsigned-sub ()
    (cypher.macros.assert
      (tests.utils.expect-failed (cf.unsigned-sub 1 2))
      "test-unsigned-sub passed"))

  (defun test-sqrt ()
    (cypher.macros.assert
      (tests.utils.expect-equal (cypher.math.sqrt 0) 0)
      (tests.utils.expect-equal (cypher.math.sqrt 0) 0)
      (tests.utils.expect-equal (cypher.math.sqrt 1) 1)
      (tests.utils.expect-equal (cypher.math.sqrt 2) 1)
      (tests.utils.expect-equal (cypher.math.sqrt 3) 1)
      (tests.utils.expect-equal (cypher.math.sqrt 4) 2)
      (tests.utils.expect-equal (cypher.math.sqrt 8) 2)
      (tests.utils.expect-equal (cypher.math.sqrt 100) 10)
      (tests.utils.expect-equal (cypher.math.sqrt 420) 20)
      (tests.utils.expect-equal (cypher.math.sqrt 10000) 100)
      (tests.utils.expect-equal (cypher.math.sqrt 1000000000000) 1000000)
      "test-sqrt passed"))

  (defun test-round ()
    (cypher.macros.assert
      (tests.utils.expect-equal (cf.round-even-odd 0 0 0) 1)
      (tests.utils.expect-equal (cf.round-even-odd 1 0 0) 1)
      (tests.utils.expect-equal (cf.round-even-odd 2 0 0) 3)
      (tests.utils.expect-equal (cf.round-even-odd 3 0 0) 3)
      (tests.utils.expect-equal (cf.round-even-odd 0 1 0) 0)
      (tests.utils.expect-equal (cf.round-even-odd 1 1 0) 2)
      (tests.utils.expect-equal (cf.round-even-odd 2 1 0) 2)
      (tests.utils.expect-equal (cf.round-even-odd 3 1 0) 4)
      (tests.utils.expect-equal (cf.round-even-odd 0 0 1) -1)
      (tests.utils.expect-equal (cf.round-even-odd 1 0 1) 1)
      (tests.utils.expect-equal (cf.round-even-odd 2 0 1) 1)
      (tests.utils.expect-equal (cf.round-even-odd 3 0 1) 3)
      (tests.utils.expect-equal (cf.round-even-odd 0 1 1) 0)
      (tests.utils.expect-equal (cf.round-even-odd 1 1 1) 0)
      (tests.utils.expect-equal (cf.round-even-odd 2 1 1) 2)
      (tests.utils.expect-equal (cf.round-even-odd 3 1 1) 2)
      "test-round passed"))

  (list
    (test-unsigned-sub)
    (test-sqrt)
    (test-round))

) ())
