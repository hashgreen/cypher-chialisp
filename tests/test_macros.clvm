(a (mod ()

  (include cypher/macros.clvm)
  (include tests/utils.clvm)

  (defun test-ii ()
    (cypher.macros.assert
      (tests.utils.expect-equal
        (cypher.macros.ii 1 "hashgreen" "hashbrown")
        "hashgreen")
      (tests.utils.expect-equal
        (cypher.macros.ii 0 "hashgreen" 1 "hashbrown" "hashred")
        "hashbrown")
      (tests.utils.expect-equal
        (cypher.macros.ii 0 "hashgreen" 0 "hashbrown" "hashred")
        "hashred")
      "test-ii passed"))

  (defun test-switch ()
    (cypher.macros.assert
      (tests.utils.expect-equal (+ 1 2) 2)
      (tests.utils.expect-equal
        (cypher.macros.switch (1 . "hashgreen") "hashbrown")
        "hashgreen")
      (tests.utils.expect-equal
        (cypher.macros.switch (0 . "hashgreen") (1 . "hashbrown") "hashred")
        "hashbrown")
      (tests.utils.expect-equal
        (cypher.macros.switch (0 . "hashgreen") (0 . "hashbrown") "hashred")
        "hashred")
      "test-switch passed"))

  (list
    (test-ii)
    (test-switch))

) ())
