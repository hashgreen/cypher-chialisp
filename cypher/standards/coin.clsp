;; Chia Coins.

(
  (defun-inline cypher.standards.coin.Coin
    (parent_id puzzle_hash amount)
    (list parent_id puzzle_hash amount))
  (defun-inline cypher.standards.coin.Coin.get-parent-id (coin)
    (f coin))
  (defun-inline cypher.standards.coin.Coin.get-parent-id-rest (coin)
    (r coin))
  (defun-inline cypher.standards.coin.Coin.get-puzzle-hash (coin)
    (f (r coin)))
  (defun-inline cypher.standards.coin.Coin.get-puzzle-hash-rest (coin)
    (r (r coin)))
  (defun-inline cypher.standards.coin.Coin.get-amount (coin)
    (f (r (r coin))))
  (defun-inline cypher.standards.coin.Coin.id (coin)
    (sha256
      (cypher.standards.coin.Coin.get-parent-id coin)
      (cypher.standards.coin.Coin.get-puzzle-hash coin)
      (cypher.standards.coin.Coin.get-amount coin)))
  (defun-inline cypher.standards.coin.Coin.verified-id (coin)
    (cypher.hashlib.calculate-coin-id
      (cypher.standards.coin.Coin.get-parent-id coin)
      (cypher.standards.coin.Coin.get-puzzle-hash coin)
      (cypher.standards.coin.Coin.get-amount coin)))

  ; Exports

  (defmacro cf.Coin args
    (c cypher.standards.coin.Coin args))
  (defmacro cf.Coin.get-parent-id args
    (c cypher.standards.coin.Coin.get-parent-id args))
  (defmacro cf.Coin.get-parent-id-rest args
    (c cypher.standards.coin.Coin.get-parent-id-rest args))
  (defmacro cf.Coin.get-puzzle-hash args
    (c cypher.standards.coin.Coin.get-puzzle-hash args))
  (defmacro cf.Coin.get-puzzle-hash-rest args
    (c cypher.standards.coin.Coin.get-puzzle-hash-rest args))
  (defmacro cf.Coin.get-amount args
    (c cypher.standards.coin.Coin.get-amount args))
  (defmacro cf.Coin.id args
    (q . x))
  (defmacro cf.Coin.id@unsafe args
    (c cypher.standards.coin.Coin.id args))
  (defmacro cf.Coin.unsafe-id args
    (c cypher.standards.coin.Coin.id args))
  (defmacro cf.Coin.verified-id args
    (c cypher.standards.coin.Coin.verified-id args))
)
